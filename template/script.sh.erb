#!/usr/bin/env bash

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

#
# Start Jupyter Notebook Server
#

# Purge the module environment to avoid conflicts
hostname

module purge
module load default-s11

module avail

# Load the required modules
<%- if context.bc_partition.include? 'gpu' -%>
module load anaconda3_gpu
<%- else -%>
module load anaconda3_cpu
<%- end -%>

# Put XALT in modulepath
# LOAD XALT HERE
# SETUP Signal handlers
<%- if context.bc_xalt_enabled -%>
  module load xalt
  
  # Setting up signal handler
  function preempt_xalt(){
	  # Find the Jupyter Lab instance here and send USR2 to it
	  pids=$(ps -xfs | grep jupyter-lab | grep -v grep | awk '{print $2}')

	  for pid in $pids; do 
		  kill -s TERM $pid
		  echo "Preempting ${pid}"
	  done
  }

  export XALT_SIGNAL_HANDLER=yes
  trap preempt_xalt SIGTERM

<%- end -%>



# List loaded modules
module list

# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"

# Launch the Jupyter Notebook Server
set -x
jupyter-lab --config="${CONFIG_FILE}"
